[package]
name = "layout-noverlap-iterate-wasm"
version = "0.1.0"
authors = ["akitaSummer <644171127@qq.com>"]
edition = "2018"

# We optimize manually since we use SIMD and by default wasm-opt can't handle that without a flag
[package.metadata.wasm-pack.profile.release]
wasm-opt = false

[package.metadata.wasm-pack.profile.profiling]
wasm-opt = false

[lib]
crate-type = ["cdylib", "rlib"]

[features]
simd = []
default = ["console_error_panic_hook", "simd"]


[dependencies]
wasm-bindgen = { version = "=0.2.73", features = ["nightly"] }
rand = "0.7.3"
tracing = "0.1"
tracing-wasm = "0.2"
tinyset = "0.3.4"
js-sys = "0.3"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
